#!/bin/sh

func_init ()
{
	if [ $# -ne 1 ] 
	then
		echo "too many args"
		echo "DONE"
		exit 1
	fi

	args=`echo "$1" | awk  -F '&' '{for(i=1;i<=NF;i++) s[$i]} END {ORS=" ";for(a in s) print a}'`

	for x  in $args
	do
		case `echo $x | awk -F '=' '{print $1}'` in 
			type) type=`echo $x | awk -F '=' '{print $2}'`
		      	;;
   			mode) mode=`echo $x | awk -F '=' '{print $2}'`
		      	;;
			city) city=`echo $x | awk -F '=' '{print $2}'`
		      	;;
			*)    
			;; 
		esac
	done

	server="10.1.1.107"
	dir="/opt/wwwroot"
}

func_offline ()
{
	echo "waiting for offline(30s)"
	echo "offline"  >$dir/webapps/ROOT/1.htm
	for x in `seq 1 30`
	do
		echo -n "-"
		sleep 1
	done
	echo
}

func_publish ()
{
	echo "sbs pubish"
	rsync -avz --exclude=".svn" $server::publish/ftl/ $dir/ftl/
	case $mode in 
	1)
		for city_name in `echo $city | awk -F ':' '{for(i=1;i<=NF;i++) s[$i]} END {ORS=" ";for(a in s) print a}'`
		do
			rsync -avz --exclude=".svn" --exclude="index.html" $server::publish/config/south/$city_name $dir/config/
			rsync -avz --exclude=".svn" --exclude="index.html" $server::publish/config/ipAddress.Dat $dir/config/
			rsync -avz --exclude=".svn" --exclude="index.html" $server::publish/system-config/$city_name $dir/system-config/
		done
		;;
	2)
		rsync -avz $server::publish/deploy/${type}.war /tmp/
		for city_name in `echo $city | awk -F ':' '{for(i=1;i<=NF;i++) s[$i]} END {ORS=" ";for(a in s) print a}'`
		do
			cp /tmp/${type}.war $dir/webapps/${city_name}-${type}.war
			echo "$mode	$city_name"
		done	
		;;
	3)
		rsync -avz $server::publish/deploy/${type}.war /tmp/
                for city_name in `echo $city | awk -F ':' '{for(i=1;i<=NF;i++) s[$i]} END {ORS=" ";for(a in s) print a}'`
                do
                        cp /tmp/${type}.war $dir/webapps/${city_name}-${type}.war
                        rsync -avz --exclude=".svn" --exclude="index.html" $server::publish/config/south/$city_name $dir/config/
                        rsync -avz --exclude=".svn" --exclude="index.html" $server::publish/config/ipAddress.Dat $dir/config/
                        rsync -avz --exclude=".svn" --exclude="index.html" $server::publish/system-config/$city_name $dir/system-config/
                done
		;;
	4)
		echo "just publish FTL"
		;;
	*)
		echo "mode:$mode"
		echo "no mode match!!!"
		echo "waiting for online"
		echo ok > $dir/webapps/ROOT/1.htm
		echo "DONE"
		exit 1
		;;
	esac
}

func_online ()
{
	while true
	do
		status=$(curl --max-time 1 --write-out %{http_code} --silent --output /dev/null 127.0.0.1:8080/1.htm)
		if [ "$status" -eq 200 ]
		then
			echo -e "\n`hostname`...............OK"
			echo "ok" > $dir/webapps/ROOT/1.htm
			echo "waiting for online(10s)"
			for x in `seq 1 10`
			do
        			echo -n "-"
        			sleep 1
			done
			echo
			break
		else
			echo -e "\n`hostname`...............still in starting "
			sleep 2
		fi
	done
}

#echo "`hostname`:start sbs_publish at `date`" 
#echo "$1" 
ip=$(ifconfig | awk -F ':' '/inet addr:10\./ {print $2}' |awk '{print $1}')
func_init "$1"

if [ "$mode" -ne 4 ]
then
	curl -H "host:update.19lou.com" -d "ip=$ip" 10.1.1.107/close_warn >/dev/null 2>&1
	func_offline 
	curl -H "host:update.19lou.com" -d "ip=$ip&status=offline" 10.1.1.107/update_status >/dev/null 2>&1
fi

func_publish

if [ "$mode" -ne 4 ]
then
	/etc/init.d/tomcat.sh restart
	curl -H "host:update.19lou.com" -d "ip=$ip&status=restart" 10.1.1.107/update_status >/dev/null 2>&1
	func_online
fi
curl -H "host:update.19lou.com" -d "ip=$ip&status=ok" 10.1.1.107/update_status >/dev/null 2>&1
curl -H "host:update.19lou.com" -d "$1" 10.1.1.107/sub_publish >/dev/null 2>&1
curl -H "host:update.19lou.com" -d "$1&action=sub_key" 10.1.1.107/sbs_dict >/dev/null 2>&1
